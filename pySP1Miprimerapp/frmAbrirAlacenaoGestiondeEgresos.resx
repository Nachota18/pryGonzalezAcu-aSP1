<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA2DQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgDAAAAa6xYVAAAArVQ
        TFRF/////f39/Pz8/v7++vr6+/v7+fn57OzsrKysjY2Nvb29+/r78/PznJycJiYmCAgIAAAABwcHPz8/
        vLy8+vn6/v/+/v3+enp6AgICCQkJCgoKDAwMqqqq/f79+Pj4eXl5BAQEBgYGBQUFAwMDExMTsrKyfHx8
        AQEBDg4OsbGx9fX1e3t79vb2fX19qqmq/Pv8CwsL+fj5/fz9f39/ra2trq6ur6+vgICAEBAQqKmoDw8P
        sLCw9/f3d3d3q6ur9/b3fn5+FhYWFRUVr66vERER+vv6hYWFDQ0N9PT04uLiQ0NDZWVl+/z7np6ezs7O
        PT09a2trpaWl1tbWExQTPj4+cHBwCAkIpKSk1NTUOjo6cXFxFBQUp6enCQgJoaGh+Pf41dXVPDw8cnJy
        oqKi19fXOzs7Zmdm9PX08fHxbGxshoaGmpqa1tXWEhISvr6+0NDQFxcXoKCgDw4PbW1tgYGBurq6U1NT
        b29vlJSUUlJSkpKSampqubm5n5+fISEh5eXlXl5eaWlpkZCR//7/7u7uSkpKqampdnZ2/P38jIyMGhoa
        YWFhT05PRUVF29vb8PDw8/Lz3t7e2dnZNjY2zc3N4+LjS0tLRkZGioqKGhkalZWVHR0dMzIz5+fn6urq
        7+/v6Ojoo6Ojg4ODu7u79PP06ejp7+7v7e3t8vLy6+vr8O/w9vX2KysrLy8vKSkpLCwsLi4uIiIiKioq
        MzMzy8vLiYmJSEhIwcHBUVFRxcXFT09PICAgxMTEi4uLUFBQHx8fHh4ew8PD6enpHBwcwsLCGxsbw8LD
        wsHC5ubmkZGRREREycnJGBgY5OTkz8/PQkJCJycnmZmZZGRk4ODg4eHh5OXksK+wdHR0GRkZ0tLSX19f
        2NjYjo6OV1dXh4eHm5ubkpGSpqamJCQkTk5OdXV109PT39/fRUyaGAAAAAFvck5UAc+id5oAAAovSURB
        VHja7Z37n5RVGcCfc3u5rDXPa7CemaXX930P8G4wtsuGuK0DRlG7koqQBXaBKCvsopjdKamgC5iSdLGi
        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
</value>
  </data>
</root>